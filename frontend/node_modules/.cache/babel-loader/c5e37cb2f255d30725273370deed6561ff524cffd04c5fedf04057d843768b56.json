{"ast":null,"code":"var _jsxFileName = \"/home/arasal/fitness_recommendation/frontend/src/App.jsx\";\nimport React from \"react\";\nimport \"./App.scss\";\nimport { Login, Register } from \"./components/login/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogginActive: true\n    };\n  }\n  changeState() {\n    //ES6 Object Destructuring\n    const {\n      isLogginActive\n    } = this.state;\n\n    //We togglet component classes depending on the current active state \n    if (isLogginActive) {\n      //Right side for login\n      this.rightSide.classList.remove(\"right\");\n      this.rightSide.classList.add(\"left\");\n    } else {\n      //Left side for Register \n      this.rightSide.classList.remove(\"left\");\n      this.rightSide.classList.add(\"right\");\n    }\n    //Of course we need to toggel the isLogginActive by inversing it's previous state \n    this.setState(prevState => ({\n      isLogginActive: !prevState.isLogginActive\n    }));\n  }\n  render() {\n    const {\n      isLogginActive\n    } = this.state;\n    const current = isLogginActive ? \"Register\" : \"Login\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          ref: ref => this.container = ref,\n          children: [isLogginActive && /*#__PURE__*/_jsxDEV(Login, {\n            containerRef: ref => this.current = ref\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), !isLogginActive && /*#__PURE__*/_jsxDEV(Register, {\n            containerRef: ref => this.current = ref\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RightSide, {\n          current: current,\n          containerRef: ref => this.rightSide = ref\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst RightSide = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"right-side\",\n    ref: props.containerRef,\n    onClick: props.onClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: props.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c = RightSide;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"RightSide\");","map":{"version":3,"names":["React","Login","Register","jsxDEV","_jsxDEV","App","Component","constructor","props","state","isLogginActive","changeState","rightSide","classList","remove","add","setState","prevState","render","current","className","children","ref","container","containerRef","fileName","_jsxFileName","lineNumber","columnNumber","RightSide","onClick","_c","$RefreshReg$"],"sources":["/home/arasal/fitness_recommendation/frontend/src/App.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./App.scss\";\nimport { Login, Register } from \"./components/login/index\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogginActive: true\n    };\n  }\n\n  changeState() {\n    //ES6 Object Destructuring\n    const { isLogginActive } = this.state;\n  \n    //We togglet component classes depending on the current active state \n    if (isLogginActive) {\n      //Right side for login\n      this.rightSide.classList.remove(\"right\");\n      this.rightSide.classList.add(\"left\");\n    } else {\n      //Left side for Register \n      this.rightSide.classList.remove(\"left\");\n      this.rightSide.classList.add(\"right\");\n    }\n    //Of course we need to toggel the isLogginActive by inversing it's previous state \n    this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\n  }\n\n  render() {\n    const { isLogginActive } = this.state;\n    const current = isLogginActive ? \"Register\" : \"Login\";\n    return (\n      <div className=\"App\">\n        <div className=\"login\">\n          <div className=\"container\" ref={ref => (this.container = ref)}>\n            {isLogginActive && (\n              <Login containerRef={ref => (this.current = ref)} />\n            )}\n            {!isLogginActive && (\n              <Register containerRef={ref => (this.current = ref)} />\n            )}\n          </div>\n          <RightSide\n            current={current}\n            containerRef={ref => (this.rightSide = ref)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst RightSide = props => {\n  return (\n    <div\n      className=\"right-side\"\n      ref={props.containerRef}\n      onClick={props.onClick}\n    >\n      <div className=\"inner-container\">\n        <div className=\"text\">{props.current}</div>\n      </div>\n    </div>\n  );\n};\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}